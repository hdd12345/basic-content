<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
	 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- 告知Spring，我们启用注解驱动 -->
	<mvc:annotation-driven />
	<!-- org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler， 
		它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求， 就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。 -->
	<mvc:default-servlet-handler />
	<!-- 指定要扫描的包的位置 -->
	<context:component-scan base-package="com.time" />

	<!-- 配置Spring MVC的视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 有时我们需要访问JSP页面,可理解为在控制器controller的返回值加前缀和后缀,变成一个可用的URL地址 -->
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- 配置nultipartresolver,注意：id名必须这样写，不然会报错，按表单提交（FormData） -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxInMemorySize" value="10240000"></property>
	</bean>


<!-- 自定切面 -->
	<aop:config>
		<!-- logAspect -> cn.jsxwsl.maven.ssm.aspect.LogAspect -->
		<aop:aspect ref="logAspect" order="2">
			<aop:pointcut expression="execution(* com.time.controller..*(..))"
				id="aop_cut_log" />
			<aop:before method="before" pointcut-ref="aop_cut_log" />
			<!-- <aop:after method="after" pointcut-ref="aop_cut_log" /> -->
		</aop:aspect>
	</aop:config>
	

</beans>